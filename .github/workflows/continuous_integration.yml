
name: Continuous Integration
on: [pull_request]

env:
    GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}
    MAILCHIMP_LIST: ${{ secrets.MAILCHIMP_LIST }}
    MAILCHIMP_API_KEY: ${{ secrets.MAILCHIMP_API_KEY }}
    ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
    ALGOLIA_SEARCH_KEY: ${{ secrets.ALGOLIA_SEARCH_KEY }}
    ALGOLIA_DOCS_INDEX: ${{ secrets.ALGOLIA_DOCS_INDEX }}
    RASA_X_HOST: ${{ secrets.RASA_X_DOMAIN }}
    RASA_X_PASSWORD: ${{ secrets.RASA_X_PASSWORD }}
    RASA_X_USERNAME: ${{ secrets.RASA_X_USERNAME }}
    RASA_X_HOST_SCHEMA: ${{ secrets.RASA_X_HOST_SCHEMA }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    TRACKER_DB_URL: ${{ secrets.TRACKER_DB_URL }}

jobs:
  check_changed_files:
    name: Check for file changes
    runs-on: ubuntu-20.04
    outputs:
      nlu: ${{ steps.changed-files.outputs.nlu }}
      core: ${{ steps.changed-files.outputs.core }}
      training: ${{ steps.changed-files.outputs.training }}
      actions: ${{ steps.changed-files.outputs.actions }}
    steps:
      - uses: actions/checkout@v2
      - uses: RasaHQ/pr-changed-files-filter@c4f7116a04b8a4596313469429e2ad235f59d9c4
        id: changed-files
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: .github/change_filters.yml
          base: ${{ github.ref }}
  lint-testing:
    name: Code Formatting Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade "pip<20"
        pip install -r requirements-dev.txt
    - name: Code Formatting Tests
      working-directory: ${{ github.workspace }}
      run: |
        make lint
  type-testing:
    name: Type Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade "pip<20"
        pip install -r requirements-dev.txt
    - name: Type Checking
      working-directory: ${{ github.workspace }}
      run: |
        make types
  action-unit-tests:
    needs:
      - lint-testing
      - type-testing
    name: Custom Action Unit Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        make install-dev
    - name: Unit Tests
      working-directory: ${{ github.workspace }}
      run: |
        make test-actions
  data-validation:
    name: Data Validation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade "pip<20"
        pip install -r requirements-dev.txt
    - name: Rasa Data Validation
      working-directory: ${{ github.workspace }}
      run: |
        rasa data validate --debug
  training-testing:
    name: Test Model
    runs-on: ubuntu-latest
    needs: 
    - data-validation
    - check_changed_files
    if:  ${{ needs.check_changed_files.outputs.training == 'true' }}
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
          python -m pip install --upgrade "pip<20"
          pip install -r requirements-dev.txt
    - name: Cross-validate NLU model
      id: cvnlu
      if: contains( github.event.pull_request.labels.*.name, 'nlu_testing_required' ) 
      run: |  
          rasa test nlu -f 3 --cross-validation
          python .github/workflows/format_results.py
    - name: post cross-val results to PR
      if: steps.cvnlu.outcome == 'success'
      uses: amn41/comment-on-pr@comment-file-contents
      continue-on-error: true
      with:
        msg: results.md
    - name: Train Model
      working-directory: ${{ github.workspace }}
      run: |
        rasa train
    - name: Test Training Stories
      if:  ${{ needs.check_changed_files.outputs.core == 'true' }}
      working-directory: ${{ github.workspace }}
      run: |
        rasa test core --stories test/test_stories.md --fail-on-prediction-errors
  build-images:
    name: Build Action Server Image
    needs: 
    - lint-testing
    - type-testing
    - training-testing
    - check_changed_files
    if: ${{ needs.check_changed_files.outputs.actions == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Authenticate into Google Cloud Platform
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '275.0.0'
        service_account_key: ${{ secrets.GCLOUD_AUTH }}
    - name: Configure Docker to use Google Cloud Platform
      run: |
        gcloud auth configure-docker
    - name: Pull Latest Image
      run: |
        docker pull gcr.io/replicated-test/rasa-demo:latest || true
    - name: Build Image
      run: |
        docker build --cache-from gcr.io/replicated-test/rasa-demo:latest .
